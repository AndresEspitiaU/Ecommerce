@model IEnumerable<Ecommerce.BD.Models.Categoria>

<div class="container-fluid my-5">
    <h2 class="text-center mb-4 fw-bold">Descubre Nuestro Catálogo</h2>

    @if (Model != null && Model.Any())
    {
        <div class="categorias-container">
            <div class="categorias-scroll">
                @foreach (var categoria in Model)
                {
                    <div class="category-item">
                        <div class="category-card position-relative overflow-hidden rounded-3 shadow-lg">
                            <img src="@categoria.CatImagenUrl" class="card-img" alt="@categoria.CatNombre">
                            <div class="category-overlay position-absolute top-0 start-0 w-100 h-100 d-flex flex-column justify-content-end p-3 bg-gradient-dark">
                                <h5 class="text-white mb-2 fw-bold">@categoria.CatNombre</h5>

                                <!-- Obtener el número de productos desde ViewData -->
                                @{
                                    var numeroDeProductosPorCategoria = ViewData["NumeroDeProductosPorCategoria"] as Dictionary<int, int>;
                                    int numeroDeProductos = numeroDeProductosPorCategoria[categoria.CategoriaId];
                                }

                                <p class="text-white">
                                    @numeroDeProductos Productos
                                </p>

                                <a href="@Url.Action("ProductosPorCategoria", "Productos", new { categoriaId = categoria.CategoriaId })" class="btn btn-sm btn-outline-light fw-bold">
                                    Explorar
                                </a>
                            </div>
                        </div>
                    </div>
                }
            </div>
        </div>
    }
    else
    {
        <div class="text-center">
            <p class="lead text-muted">Aún no hay categorías disponibles.</p>
            <p>Vuelve pronto para descubrir nuestras nuevas colecciones.</p>
        </div>
    }
</div>

<style>
    .categorias-container {
        position: relative;
        padding: 0 40px;
        background: none !important;
    }

    .categorias-scroll {
        display: flex;
        overflow-x: auto;
        scroll-behavior: smooth;
        -webkit-overflow-scrolling: touch;
        scrollbar-width: none;
        -ms-overflow-style: none;
        padding: 10px 0;
        background: none !important;
    }

        .categorias-scroll::-webkit-scrollbar {
            display: none;
        }

    .category-item {
        flex: 0 0 auto;
        width: 250px;
        margin-right: 20px;
        background: none !important;
    }

    .category-card {
        height: 300px; /* Ajusta la altura para que la imagen ocupe todo el espacio */ 
        transition: transform 0.3s ease-in-out;
        background: none !important; /* Asegura que no haya fondo */
        box-shadow: none !important; /* Elimina sombras */
    }

    .card-img {
        width: 100%;
        height: 100%;
        object-fit: cover; /* Mostrar la imagen completa sin distorsión */
        background: none !important;
        object-position: center;
    }

    .bg-gradient-dark {
        background: linear-gradient(to top, rgba(0, 0, 0, 0.8), rgba(0, 0, 0, 0));
    }

    .category-overlay {
        opacity: 0;
        transition: opacity 0.4s ease-in-out;
    }


    .categorias-container, .categorias-scroll {
        background: none !important; /* Quita cualquier fondo en el contenedor principal */
    }

    .category-card:hover .category-overlay {
        opacity: 1;
    }

    .category-card:hover {
        transform: scale(1.05);
    }

    .nav-button {
        position: absolute;
        top: 50%;
        transform: translateY(-50%);
        background-color: rgba(0, 0, 0, 0.5);
        color: white;
        border: none;
        border-radius: 50%;
        width: 40px;
        height: 40px;
        font-size: 20px;
        display: flex;
        align-items: center;
        justify-content: center;
        cursor: pointer;
        transition: background-color 0.3s;
        z-index: 10;
    }

        .nav-button:hover {
            background-color: rgba(0, 0, 0, 0.8);
        }

    .nav-prev {
        left: 0;
    }

    .nav-next {
        right: 0;
    }
</style>

<script>
    document.addEventListener('DOMContentLoaded', function () {
        const container = document.querySelector('.categorias-scroll');
        const prevBtn = document.createElement('button');
        const nextBtn = document.createElement('button');

        prevBtn.innerHTML = '&#8249;';
        nextBtn.innerHTML = '&#8250;';
        prevBtn.className = 'nav-button nav-prev';
        nextBtn.className = 'nav-button nav-next';

        document.querySelector('.categorias-container').appendChild(prevBtn);
        document.querySelector('.categorias-container').appendChild(nextBtn);

        prevBtn.addEventListener('click', () => {
            container.scrollBy({ left: -500, behavior: 'smooth' });
        });

        nextBtn.addEventListener('click', () => {
            container.scrollBy({ left: 500, behavior: 'smooth' });
        });
    });
</script>
