// <auto-generated />
using System;
using Ecommerce.BD.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Ecommerce.BD.Migrations
{
    [DbContext(typeof(EcommerceContext))]
    partial class EcommerceContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Ecommerce.BD.Models.Banner", b =>
                {
                    b.Property<int>("BannerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BannerId"));

                    b.Property<bool>("Activo")
                        .HasColumnType("bit");

                    b.Property<DateTime>("FechaActualizacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<string>("Imagen")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("BannerId");

                    b.ToTable("Banners");
                });

            modelBuilder.Entity("Ecommerce.BD.Models.Carrito", b =>
                {
                    b.Property<int>("CarritoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CarritoId"));

                    b.Property<DateTime?>("FechaCreacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("int");

                    b.HasKey("CarritoId")
                        .HasName("PK__Carritos__778D586BA1ED1FCE");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Carritos");
                });

            modelBuilder.Entity("Ecommerce.BD.Models.CarritoItem", b =>
                {
                    b.Property<int>("CarritoItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CarritoItemId"));

                    b.Property<int>("Cantidad")
                        .HasColumnType("int");

                    b.Property<int>("CarritoId")
                        .HasColumnType("int");

                    b.Property<decimal>("PrecioUnitario")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<int>("ProductoId")
                        .HasColumnType("int");

                    b.HasKey("CarritoItemId")
                        .HasName("PK__CarritoI__BFC8805AEE3A04DA");

                    b.HasIndex("CarritoId");

                    b.HasIndex("ProductoId");

                    b.ToTable("CarritoItems");
                });

            modelBuilder.Entity("Ecommerce.BD.Models.Categoria", b =>
                {
                    b.Property<int>("CategoriaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CategoriaId"));

                    b.Property<string>("CatImagenUrl")
                        .HasMaxLength(2083)
                        .HasColumnType("nvarchar(2083)")
                        .HasColumnName("Cat_ImagenUrl");

                    b.Property<string>("CatNombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Cat_Nombre");

                    b.HasKey("CategoriaId")
                        .HasName("PK__Categori__F353C1E5CBB5F520");

                    b.ToTable("Categorias");
                });

            modelBuilder.Entity("Ecommerce.BD.Models.Coleccione", b =>
                {
                    b.Property<int>("ColeccionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ColeccionId"));

                    b.Property<bool>("ColActivo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("Col_Activo");

                    b.Property<string>("ColDescripcion")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("Col_Descripcion");

                    b.Property<string>("ColImagenUrl")
                        .HasMaxLength(2083)
                        .HasColumnType("nvarchar(2083)")
                        .HasColumnName("Col_ImagenUrl");

                    b.Property<string>("ColNombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("Col_Nombre");

                    b.HasKey("ColeccionId")
                        .HasName("PK__Coleccio__FC447A26E7CA124E");

                    b.ToTable("Colecciones");
                });

            modelBuilder.Entity("Ecommerce.BD.Models.Color", b =>
                {
                    b.Property<int>("ColorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ColorId"));

                    b.Property<string>("Col_Hexadecimal")
                        .IsRequired()
                        .HasMaxLength(7)
                        .HasColumnType("nvarchar(7)")
                        .HasColumnName("Col_Hexadecimal");

                    b.Property<string>("Col_Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Col_Nombre");

                    b.HasKey("ColorId")
                        .HasName("PK__Colores__8DA7674DC6AC5C29");

                    b.ToTable("Colores", (string)null);
                });

            modelBuilder.Entity("Ecommerce.BD.Models.Cupone", b =>
                {
                    b.Property<int>("CuponId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CuponId"));

                    b.Property<bool>("CupActivo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("Cup_Activo");

                    b.Property<string>("CupCodigo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Cup_Codigo");

                    b.Property<string>("CupDescripcion")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("Cup_Descripcion");

                    b.Property<DateTime?>("CupFechaExpiracion")
                        .HasColumnType("datetime")
                        .HasColumnName("Cup_FechaExpiracion");

                    b.Property<DateTime?>("CupFechaInicio")
                        .HasColumnType("datetime")
                        .HasColumnName("Cup_FechaInicio");

                    b.Property<decimal?>("CupMontoDescuento")
                        .HasColumnType("decimal(18, 2)")
                        .HasColumnName("Cup_MontoDescuento");

                    b.Property<decimal?>("CupPorcentajeDescuento")
                        .HasColumnType("decimal(5, 2)")
                        .HasColumnName("Cup_PorcentajeDescuento");

                    b.HasKey("CuponId")
                        .HasName("PK__Cupones__C4356897A621BD92");

                    b.HasIndex(new[] { "CupCodigo" }, "UQ__Cupones__097EAC077A813031")
                        .IsUnique();

                    b.ToTable("Cupones");
                });

            modelBuilder.Entity("Ecommerce.BD.Models.Descuento", b =>
                {
                    b.Property<int>("DescuentoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DescuentoId"));

                    b.Property<bool>("DesActivo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true)
                        .HasColumnName("Des_Activo");

                    b.Property<string>("DesDescripcion")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("Des_Descripcion");

                    b.Property<string>("DesNombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("Des_Nombre");

                    b.Property<decimal>("DesPorcentaje")
                        .HasColumnType("decimal(5, 2)")
                        .HasColumnName("Des_Porcentaje");

                    b.HasKey("DescuentoId")
                        .HasName("PK__Descuent__0C2C1118D7EE1399");

                    b.ToTable("Descuentos");
                });

            modelBuilder.Entity("Ecommerce.BD.Models.Devolucione", b =>
                {
                    b.Property<int>("DevolucionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DevolucionId"));

                    b.Property<int>("Cantidad")
                        .HasColumnType("int");

                    b.Property<string>("DevEstado")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasDefaultValue("Pendiente")
                        .HasColumnName("Dev_Estado");

                    b.Property<DateTime?>("DevFechaDevolucion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("Dev_FechaDevolucion")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("DevMotivo")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("Dev_Motivo");

                    b.Property<int>("PedidoId")
                        .HasColumnType("int");

                    b.Property<int>("ProductoId")
                        .HasColumnType("int");

                    b.HasKey("DevolucionId")
                        .HasName("PK__Devoluci__28E7B0C703AB552B");

                    b.HasIndex("PedidoId");

                    b.HasIndex("ProductoId");

                    b.ToTable("Devoluciones");
                });

            modelBuilder.Entity("Ecommerce.BD.Models.Direccione", b =>
                {
                    b.Property<int>("DireccionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DireccionId"));

                    b.Property<string>("DirCiudad")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("Dir_Ciudad");

                    b.Property<string>("DirCodigoPostal")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("Dir_CodigoPostal");

                    b.Property<string>("DirDepartamento")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("Dir_Departamento");

                    b.Property<string>("DirDireccion")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("Dir_Direccion");

                    b.Property<bool?>("DirEsDireccionPrincipal")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("Dir_EsDireccionPrincipal");

                    b.Property<string>("DirPais")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("Dir_Pais");

                    b.Property<string>("DirTelefono")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("Dir_Telefono");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("int");

                    b.HasKey("DireccionId")
                        .HasName("PK__Direccio__68906D64C64002D4");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Direcciones");
                });

            modelBuilder.Entity("Ecommerce.BD.Models.Favorito", b =>
                {
                    b.Property<int>("FavoritoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FavoritoId"));

                    b.Property<DateTime?>("FechaAgregado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("ProductoId")
                        .HasColumnType("int");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("int");

                    b.HasKey("FavoritoId")
                        .HasName("PK__Favorito__CFF711E540F8CB71");

                    b.HasIndex("ProductoId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Favoritos");
                });

            modelBuilder.Entity("Ecommerce.BD.Models.Genero", b =>
                {
                    b.Property<int>("GeneroId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("GeneroId"));

                    b.Property<string>("GenDescripcion")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("Gen_Descripcion");

                    b.Property<string>("GenNombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Gen_Nombre");

                    b.HasKey("GeneroId")
                        .HasName("PK__Generos__A99D02488A917313");

                    b.ToTable("Generos");
                });

            modelBuilder.Entity("Ecommerce.BD.Models.ListaDeseo", b =>
                {
                    b.Property<int>("ListaDeseoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ListaDeseoId"));

                    b.Property<DateTime?>("ListaDeseoFechaCreacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("ListaDeseo_FechaCreacion")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("ListaDeseoNombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("ListaDeseo_Nombre");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("int");

                    b.HasKey("ListaDeseoId")
                        .HasName("PK__ListaDes__5D65BA4B5195219B");

                    b.HasIndex("UsuarioId");

                    b.ToTable("ListaDeseo", (string)null);
                });

            modelBuilder.Entity("Ecommerce.BD.Models.ListaDeseoItem", b =>
                {
                    b.Property<int>("ListaDeseoItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ListaDeseoItemId"));

                    b.Property<DateTime?>("FechaAgregado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("ListaDeseoId")
                        .HasColumnType("int");

                    b.Property<int>("ProductoId")
                        .HasColumnType("int");

                    b.HasKey("ListaDeseoItemId")
                        .HasName("PK__ListaDes__5844A70CDFF15584");

                    b.HasIndex("ListaDeseoId");

                    b.HasIndex("ProductoId");

                    b.ToTable("ListaDeseoItems");
                });

            modelBuilder.Entity("Ecommerce.BD.Models.Log", b =>
                {
                    b.Property<int>("LogId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LogId"));

                    b.Property<string>("LogsAccion")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("Logs_Accion");

                    b.Property<DateTime?>("LogsFecha")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("Logs_Fecha")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("LogsNivel")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Logs_Nivel");

                    b.Property<int?>("UsuarioId")
                        .HasColumnType("int");

                    b.HasKey("LogId")
                        .HasName("PK__Logs__5E54864832324297");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Logs");
                });

            modelBuilder.Entity("Ecommerce.BD.Models.Marca", b =>
                {
                    b.Property<int>("MarcaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MarcaId"));

                    b.Property<string>("MarNombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Mar_Nombre");

                    b.Property<int>("ProductosCount")
                        .HasColumnType("int");

                    b.HasKey("MarcaId")
                        .HasName("PK__Marcas__D5B1CD8B405F1601");

                    b.ToTable("Marcas");
                });

            modelBuilder.Entity("Ecommerce.BD.Models.Notificacione", b =>
                {
                    b.Property<int>("NotificacionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("NotificacionId"));

                    b.Property<DateTime?>("NotFechaEnvio")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("Not_FechaEnvio")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<bool?>("NotLeido")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("Not_Leido");

                    b.Property<string>("NotMensaje")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)")
                        .HasColumnName("Not_Mensaje");

                    b.Property<string>("NotTipo")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Not_Tipo");

                    b.Property<string>("NotTitulo")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("Not_Titulo");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("int");

                    b.HasKey("NotificacionId")
                        .HasName("PK__Notifica__BCC1202435B50722");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Notificaciones");
                });

            modelBuilder.Entity("Ecommerce.BD.Models.Pedido", b =>
                {
                    b.Property<int>("PedidoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PedidoId"));

                    b.Property<int?>("DireccionId")
                        .HasColumnType("int");

                    b.Property<string>("PedEstado")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasDefaultValue("Pendiente")
                        .HasColumnName("Ped_Estado");

                    b.Property<DateTime?>("PedFechaPedido")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("Ped_FechaPedido")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<decimal>("PedTotal")
                        .HasColumnType("decimal(18, 2)")
                        .HasColumnName("Ped_Total");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("int");

                    b.HasKey("PedidoId")
                        .HasName("PK__Pedidos__09BA14307DF6022C");

                    b.HasIndex("DireccionId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Pedidos");
                });

            modelBuilder.Entity("Ecommerce.BD.Models.PedidoItem", b =>
                {
                    b.Property<int>("PedidoItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PedidoItemId"));

                    b.Property<int>("Cantidad")
                        .HasColumnType("int");

                    b.Property<int>("PedidoId")
                        .HasColumnType("int");

                    b.Property<decimal>("PrecioUnitario")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<int>("ProductoId")
                        .HasColumnType("int");

                    b.HasKey("PedidoItemId")
                        .HasName("PK__PedidoIt__4A8A527373B0A299");

                    b.HasIndex("PedidoId");

                    b.HasIndex("ProductoId");

                    b.ToTable("PedidoItems");
                });

            modelBuilder.Entity("Ecommerce.BD.Models.Producto", b =>
                {
                    b.Property<int>("ProductoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProductoId"));

                    b.Property<bool>("ProActivo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("Pro_Activo");

                    b.Property<int?>("ProCategoriaId")
                        .HasColumnType("int")
                        .HasColumnName("Pro_CategoriaId");

                    b.Property<string>("ProCodigo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("ProColeccionId")
                        .HasColumnType("int")
                        .HasColumnName("Pro_ColeccionId");

                    b.Property<string>("ProDescripcionCorta")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("Pro_DescripcionCorta");

                    b.Property<string>("ProDescripción")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("Pro_Descripción");

                    b.Property<DateTime?>("ProFechaActualizacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("Pro_FechaActualizacion")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime?>("ProFechaCreacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("Pro_FechaCreacion")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int?>("ProGeneroId")
                        .HasColumnType("int")
                        .HasColumnName("Pro_GeneroId");

                    b.Property<string>("ProImagenUrl")
                        .HasMaxLength(2083)
                        .HasColumnType("nvarchar(2083)")
                        .HasColumnName("Pro_ImagenUrl");

                    b.Property<int?>("ProMarcaId")
                        .HasColumnType("int")
                        .HasColumnName("Pro_MarcaId");

                    b.Property<string>("ProNombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("Pro_Nombre");

                    b.Property<decimal?>("ProPeso")
                        .HasColumnType("decimal(10, 2)")
                        .HasColumnName("Pro_Peso");

                    b.Property<decimal>("ProPrecio")
                        .HasColumnType("decimal(18, 2)")
                        .HasColumnName("Pro_Precio");

                    b.Property<int>("ProStock")
                        .HasColumnType("int")
                        .HasColumnName("Pro_Stock");

                    b.Property<int?>("SubcategoriaId")
                        .HasColumnType("int");

                    b.HasKey("ProductoId")
                        .HasName("PK__Producto__A430AEA35578B677");

                    b.HasIndex("ProCategoriaId");

                    b.HasIndex("ProColeccionId");

                    b.HasIndex("ProGeneroId");

                    b.HasIndex("ProMarcaId");

                    b.HasIndex("SubcategoriaId");

                    b.HasIndex(new[] { "ProCodigo" }, "UQ__Producto__90746C23AD9BD623")
                        .IsUnique();

                    b.ToTable("Productos");
                });

            modelBuilder.Entity("Ecommerce.BD.Models.ProductoColor", b =>
                {
                    b.Property<int>("ProductoColorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProductoColorId"));

                    b.Property<int>("ColorId")
                        .HasColumnType("int");

                    b.Property<int>("ProductoId")
                        .HasColumnType("int");

                    b.HasKey("ProductoColorId");

                    b.HasIndex("ColorId");

                    b.HasIndex("ProductoId");

                    b.ToTable("ProductoColor");
                });

            modelBuilder.Entity("Ecommerce.BD.Models.ProductoDescuento", b =>
                {
                    b.Property<int>("ProductoDescuentoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProductoDescuentoId"));

                    b.Property<int>("DescuentoId")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaFin")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("FechaInicio")
                        .HasColumnType("datetime");

                    b.Property<int>("ProductoId")
                        .HasColumnType("int");

                    b.HasKey("ProductoDescuentoId")
                        .HasName("PK__Producto__3F7761DE808F209F");

                    b.HasIndex("DescuentoId");

                    b.HasIndex(new[] { "ProductoId" }, "idx_ProductoId");

                    b.ToTable("ProductoDescuentos");
                });

            modelBuilder.Entity("Ecommerce.BD.Models.ProductoImagene", b =>
                {
                    b.Property<int>("ImagenId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ImagenId"));

                    b.Property<bool>("EsPrincipal")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<string>("ImagenUrl")
                        .IsRequired()
                        .HasMaxLength(2083)
                        .HasColumnType("nvarchar(2083)");

                    b.Property<int>("ProductoId")
                        .HasColumnType("int");

                    b.HasKey("ImagenId")
                        .HasName("PK__Producto__0C7D20B7E0748E58");

                    b.HasIndex("ProductoId");

                    b.ToTable("ProductoImagenes");
                });

            modelBuilder.Entity("Ecommerce.BD.Models.ProductoTalla", b =>
                {
                    b.Property<int>("ProductoTallaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProductoTallaId"));

                    b.Property<int>("CantidadStock")
                        .HasColumnType("int");

                    b.Property<int>("ProductoId")
                        .HasColumnType("int");

                    b.Property<int>("TallaId")
                        .HasColumnType("int");

                    b.HasKey("ProductoTallaId")
                        .HasName("PK__Producto__41E8D2EA3987EB02");

                    b.HasIndex("ProductoId");

                    b.HasIndex("TallaId");

                    b.ToTable("ProductoTallas");
                });

            modelBuilder.Entity("Ecommerce.BD.Models.PromocionProducto", b =>
                {
                    b.Property<int>("PromocionProductoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PromocionProductoId"));

                    b.Property<int>("ProductoId")
                        .HasColumnType("int");

                    b.Property<int>("PromocionId")
                        .HasColumnType("int");

                    b.HasKey("PromocionProductoId")
                        .HasName("PK__Promocio__64E32947221D40D5");

                    b.HasIndex("ProductoId");

                    b.HasIndex("PromocionId");

                    b.ToTable("PromocionProductos");
                });

            modelBuilder.Entity("Ecommerce.BD.Models.Promocione", b =>
                {
                    b.Property<int>("PromocionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PromocionId"));

                    b.Property<bool>("PromActivo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true)
                        .HasColumnName("Prom_Activo");

                    b.Property<string>("PromDescripcion")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("Prom_Descripcion");

                    b.Property<decimal?>("PromDescuentoMonto")
                        .HasColumnType("decimal(18, 2)")
                        .HasColumnName("Prom_DescuentoMonto");

                    b.Property<decimal?>("PromDescuentoPorcentaje")
                        .HasColumnType("decimal(5, 2)")
                        .HasColumnName("Prom_DescuentoPorcentaje");

                    b.Property<DateTime>("PromFechaFin")
                        .HasColumnType("datetime")
                        .HasColumnName("Prom_FechaFin");

                    b.Property<DateTime>("PromFechaInicio")
                        .HasColumnType("datetime")
                        .HasColumnName("Prom_FechaInicio");

                    b.Property<string>("PromNombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("Prom_Nombre");

                    b.HasKey("PromocionId")
                        .HasName("PK__Promocio__2DA61D9D949AC34D");

                    b.ToTable("Promociones");
                });

            modelBuilder.Entity("Ecommerce.BD.Models.Reseña", b =>
                {
                    b.Property<int>("ReseñaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ReseñaId"));

                    b.Property<int>("ProductoId")
                        .HasColumnType("int");

                    b.Property<string>("ResComentario")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)")
                        .HasColumnName("Res_Comentario");

                    b.Property<DateTime?>("ResFechaReseña")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("Res_FechaReseña")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int?>("ResPuntuacion")
                        .HasColumnType("int")
                        .HasColumnName("Res_Puntuacion");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("int");

                    b.HasKey("ReseñaId")
                        .HasName("PK__Reseñas__B17323A6DAD2CB63");

                    b.HasIndex("ProductoId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Reseñas");
                });

            modelBuilder.Entity("Ecommerce.BD.Models.Subcategoria", b =>
                {
                    b.Property<int>("SubcategoriaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SubcategoriaId"));

                    b.Property<int>("CategoriaId")
                        .HasColumnType("int");

                    b.Property<string>("SubImagenUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SubNombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SubcategoriaId");

                    b.HasIndex("CategoriaId");

                    b.ToTable("Subcategorias");
                });

            modelBuilder.Entity("Ecommerce.BD.Models.Talla", b =>
                {
                    b.Property<int>("TallaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TallaId"));

                    b.Property<int?>("TalCadera")
                        .HasColumnType("int");

                    b.Property<string>("TalCategoria")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TalCintura")
                        .HasColumnType("int");

                    b.Property<int?>("TalColombia")
                        .HasColumnType("int");

                    b.Property<int?>("TalCuello")
                        .HasColumnType("int");

                    b.Property<string>("TalDescripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TalEU")
                        .HasColumnType("int");

                    b.Property<int?>("TalLargo")
                        .HasColumnType("int");

                    b.Property<int?>("TalLongitudManga")
                        .HasColumnType("int");

                    b.Property<string>("TalNombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Tal_Nombre");

                    b.Property<int>("TalOrdenVisualizacion")
                        .HasColumnType("int")
                        .HasColumnName("Tal_OrdenVisualizacion");

                    b.Property<int?>("TalPecho")
                        .HasColumnType("int");

                    b.Property<int?>("TalUS")
                        .HasColumnType("int");

                    b.HasKey("TallaId")
                        .HasName("PK__Tallas__9BF1376DE095399A");

                    b.ToTable("Tallas");
                });

            modelBuilder.Entity("Ecommerce.BD.Models.Transaccione", b =>
                {
                    b.Property<int>("TransaccionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TransaccionId"));

                    b.Property<int>("PedidoId")
                        .HasColumnType("int");

                    b.Property<string>("TraEstado")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Tra_Estado");

                    b.Property<DateTime?>("TraFechaTransaccion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("Tra_FechaTransaccion")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("TraMetodoPago")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Tra_MetodoPago");

                    b.Property<decimal>("TraMonto")
                        .HasColumnType("decimal(18, 2)")
                        .HasColumnName("Tra_Monto");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("int");

                    b.HasKey("TransaccionId")
                        .HasName("PK__Transacc__86A849FEBEAD34F4");

                    b.HasIndex("PedidoId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Transacciones");
                });

            modelBuilder.Entity("Ecommerce.BD.Models.Usuario", b =>
                {
                    b.Property<int>("UsuarioId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UsuarioId"));

                    b.Property<string>("IdentityUserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool?>("UsuActivo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true)
                        .HasColumnName("Usu_Activo");

                    b.Property<string>("UsuApellido")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("Usu_Apellido");

                    b.Property<DateTime?>("UsuFechaRegistro")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("Usu_FechaRegistro")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("UsuNombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("Usu_Nombre");

                    b.Property<string>("UsuTelefono")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("Usu_Telefono");

                    b.HasKey("UsuarioId")
                        .HasName("PK__Usuarios__2B3DE7B816446567");

                    b.HasIndex("IdentityUserId");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("Ecommerce.BD.Models.Carrito", b =>
                {
                    b.HasOne("Ecommerce.BD.Models.Usuario", "Usuario")
                        .WithMany("Carritos")
                        .HasForeignKey("UsuarioId")
                        .IsRequired()
                        .HasConstraintName("FK__Carritos__Usuari__6E01572D");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("Ecommerce.BD.Models.CarritoItem", b =>
                {
                    b.HasOne("Ecommerce.BD.Models.Carrito", "Carrito")
                        .WithMany("CarritoItems")
                        .HasForeignKey("CarritoId")
                        .IsRequired()
                        .HasConstraintName("FK__CarritoIt__Carri__70DDC3D8");

                    b.HasOne("Ecommerce.BD.Models.Producto", "Producto")
                        .WithMany("CarritoItems")
                        .HasForeignKey("ProductoId")
                        .IsRequired()
                        .HasConstraintName("FK__CarritoIt__Produ__71D1E811");

                    b.Navigation("Carrito");

                    b.Navigation("Producto");
                });

            modelBuilder.Entity("Ecommerce.BD.Models.Devolucione", b =>
                {
                    b.HasOne("Ecommerce.BD.Models.Pedido", "Pedido")
                        .WithMany("Devoluciones")
                        .HasForeignKey("PedidoId")
                        .IsRequired()
                        .HasConstraintName("FK__Devolucio__Pedid__1CBC4616");

                    b.HasOne("Ecommerce.BD.Models.Producto", "Producto")
                        .WithMany("Devoluciones")
                        .HasForeignKey("ProductoId")
                        .IsRequired()
                        .HasConstraintName("FK__Devolucio__Produ__1DB06A4F");

                    b.Navigation("Pedido");

                    b.Navigation("Producto");
                });

            modelBuilder.Entity("Ecommerce.BD.Models.Direccione", b =>
                {
                    b.HasOne("Ecommerce.BD.Models.Usuario", "Usuario")
                        .WithMany("Direcciones")
                        .HasForeignKey("UsuarioId")
                        .IsRequired()
                        .HasConstraintName("FK__Direccion__Usuar__75A278F5");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("Ecommerce.BD.Models.Favorito", b =>
                {
                    b.HasOne("Ecommerce.BD.Models.Producto", "Producto")
                        .WithMany("Favoritos")
                        .HasForeignKey("ProductoId")
                        .IsRequired()
                        .HasConstraintName("FK__Favoritos__Produ__60A75C0F");

                    b.HasOne("Ecommerce.BD.Models.Usuario", "Usuario")
                        .WithMany("Favoritos")
                        .HasForeignKey("UsuarioId")
                        .IsRequired()
                        .HasConstraintName("FK__Favoritos__Usuar__5FB337D6");

                    b.Navigation("Producto");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("Ecommerce.BD.Models.ListaDeseo", b =>
                {
                    b.HasOne("Ecommerce.BD.Models.Usuario", "Usuario")
                        .WithMany("ListaDeseos")
                        .HasForeignKey("UsuarioId")
                        .IsRequired()
                        .HasConstraintName("FK__ListaDese__Usuar__797309D9");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("Ecommerce.BD.Models.ListaDeseoItem", b =>
                {
                    b.HasOne("Ecommerce.BD.Models.ListaDeseo", "ListaDeseo")
                        .WithMany("ListaDeseoItems")
                        .HasForeignKey("ListaDeseoId")
                        .IsRequired()
                        .HasConstraintName("FK__ListaDese__Lista__7D439ABD");

                    b.HasOne("Ecommerce.BD.Models.Producto", "Producto")
                        .WithMany("ListaDeseoItems")
                        .HasForeignKey("ProductoId")
                        .IsRequired()
                        .HasConstraintName("FK__ListaDese__Produ__7E37BEF6");

                    b.Navigation("ListaDeseo");

                    b.Navigation("Producto");
                });

            modelBuilder.Entity("Ecommerce.BD.Models.Log", b =>
                {
                    b.HasOne("Ecommerce.BD.Models.Usuario", "Usuario")
                        .WithMany("Logs")
                        .HasForeignKey("UsuarioId")
                        .HasConstraintName("FK__Logs__UsuarioId__5BE2A6F2");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("Ecommerce.BD.Models.Notificacione", b =>
                {
                    b.HasOne("Ecommerce.BD.Models.Usuario", "Usuario")
                        .WithMany("Notificaciones")
                        .HasForeignKey("UsuarioId")
                        .IsRequired()
                        .HasConstraintName("FK__Notificac__Usuar__0D7A0286");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("Ecommerce.BD.Models.Pedido", b =>
                {
                    b.HasOne("Ecommerce.BD.Models.Direccione", "Direccion")
                        .WithMany("Pedidos")
                        .HasForeignKey("DireccionId")
                        .HasConstraintName("FK__Pedidos__Direcci__03F0984C");

                    b.HasOne("Ecommerce.BD.Models.Usuario", "Usuario")
                        .WithMany("Pedidos")
                        .HasForeignKey("UsuarioId")
                        .IsRequired()
                        .HasConstraintName("FK__Pedidos__Usuario__02FC7413");

                    b.Navigation("Direccion");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("Ecommerce.BD.Models.PedidoItem", b =>
                {
                    b.HasOne("Ecommerce.BD.Models.Pedido", "Pedido")
                        .WithMany("PedidoItems")
                        .HasForeignKey("PedidoId")
                        .IsRequired()
                        .HasConstraintName("FK__PedidoIte__Pedid__10566F31");

                    b.HasOne("Ecommerce.BD.Models.Producto", "Producto")
                        .WithMany("PedidoItems")
                        .HasForeignKey("ProductoId")
                        .IsRequired()
                        .HasConstraintName("FK__PedidoIte__Produ__114A936A");

                    b.Navigation("Pedido");

                    b.Navigation("Producto");
                });

            modelBuilder.Entity("Ecommerce.BD.Models.Producto", b =>
                {
                    b.HasOne("Ecommerce.BD.Models.Categoria", "ProCategoria")
                        .WithMany("Productos")
                        .HasForeignKey("ProCategoriaId")
                        .HasConstraintName("FK__Productos__Pro_C__46E78A0C");

                    b.HasOne("Ecommerce.BD.Models.Coleccione", "ProColeccion")
                        .WithMany("Productos")
                        .HasForeignKey("ProColeccionId")
                        .HasConstraintName("FK__Productos__Pro_C__48CFD27E");

                    b.HasOne("Ecommerce.BD.Models.Genero", "ProGenero")
                        .WithMany("Productos")
                        .HasForeignKey("ProGeneroId")
                        .HasConstraintName("FK__Productos__Pro_G__49C3F6B7");

                    b.HasOne("Ecommerce.BD.Models.Marca", "ProMarca")
                        .WithMany("Productos")
                        .HasForeignKey("ProMarcaId")
                        .HasConstraintName("FK__Productos__Pro_M__47DBAE45");

                    b.HasOne("Ecommerce.BD.Models.Subcategoria", "Subcategoria")
                        .WithMany("Productos")
                        .HasForeignKey("SubcategoriaId");

                    b.Navigation("ProCategoria");

                    b.Navigation("ProColeccion");

                    b.Navigation("ProGenero");

                    b.Navigation("ProMarca");

                    b.Navigation("Subcategoria");
                });

            modelBuilder.Entity("Ecommerce.BD.Models.ProductoColor", b =>
                {
                    b.HasOne("Ecommerce.BD.Models.Color", "Colores")
                        .WithMany("ProductoColores")
                        .HasForeignKey("ColorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Ecommerce.BD.Models.Producto", "Producto")
                        .WithMany("ProductoColores")
                        .HasForeignKey("ProductoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Colores");

                    b.Navigation("Producto");
                });

            modelBuilder.Entity("Ecommerce.BD.Models.ProductoDescuento", b =>
                {
                    b.HasOne("Ecommerce.BD.Models.Descuento", "Descuento")
                        .WithMany("ProductoDescuentos")
                        .HasForeignKey("DescuentoId")
                        .IsRequired()
                        .HasConstraintName("FK__ProductoD__Descu__5441852A");

                    b.HasOne("Ecommerce.BD.Models.Producto", "Producto")
                        .WithMany("ProductoDescuentos")
                        .HasForeignKey("ProductoId")
                        .IsRequired()
                        .HasConstraintName("FK__ProductoD__Produ__534D60F1");

                    b.Navigation("Descuento");

                    b.Navigation("Producto");
                });

            modelBuilder.Entity("Ecommerce.BD.Models.ProductoImagene", b =>
                {
                    b.HasOne("Ecommerce.BD.Models.Producto", "Producto")
                        .WithMany("ProductoImagenes")
                        .HasForeignKey("ProductoId")
                        .IsRequired()
                        .HasConstraintName("FK__ProductoI__Produ__4D94879B");

                    b.Navigation("Producto");
                });

            modelBuilder.Entity("Ecommerce.BD.Models.ProductoTalla", b =>
                {
                    b.HasOne("Ecommerce.BD.Models.Producto", "Producto")
                        .WithMany("ProductoTallas")
                        .HasForeignKey("ProductoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__ProductoT__Produ__59C55456");

                    b.HasOne("Ecommerce.BD.Models.Talla", "Talla")
                        .WithMany("ProductoTallas")
                        .HasForeignKey("TallaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__ProductoT__Talla__5AB9788F");

                    b.Navigation("Producto");

                    b.Navigation("Talla");
                });

            modelBuilder.Entity("Ecommerce.BD.Models.PromocionProducto", b =>
                {
                    b.HasOne("Ecommerce.BD.Models.Producto", "Producto")
                        .WithMany("PromocionProductos")
                        .HasForeignKey("ProductoId")
                        .IsRequired()
                        .HasConstraintName("FK__Promocion__Produ__17F790F9");

                    b.HasOne("Ecommerce.BD.Models.Promocione", "Promocion")
                        .WithMany("PromocionProductos")
                        .HasForeignKey("PromocionId")
                        .IsRequired()
                        .HasConstraintName("FK__Promocion__Promo__17036CC0");

                    b.Navigation("Producto");

                    b.Navigation("Promocion");
                });

            modelBuilder.Entity("Ecommerce.BD.Models.Reseña", b =>
                {
                    b.HasOne("Ecommerce.BD.Models.Producto", "Producto")
                        .WithMany("Reseñas")
                        .HasForeignKey("ProductoId")
                        .IsRequired()
                        .HasConstraintName("FK__Reseñas__Product__693CA210");

                    b.HasOne("Ecommerce.BD.Models.Usuario", "Usuario")
                        .WithMany("Reseñas")
                        .HasForeignKey("UsuarioId")
                        .IsRequired()
                        .HasConstraintName("FK__Reseñas__Usuario__6A30C649");

                    b.Navigation("Producto");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("Ecommerce.BD.Models.Subcategoria", b =>
                {
                    b.HasOne("Ecommerce.BD.Models.Categoria", "Categoria")
                        .WithMany("Subcategorias")
                        .HasForeignKey("CategoriaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Categoria");
                });

            modelBuilder.Entity("Ecommerce.BD.Models.Transaccione", b =>
                {
                    b.HasOne("Ecommerce.BD.Models.Pedido", "Pedido")
                        .WithMany("Transacciones")
                        .HasForeignKey("PedidoId")
                        .IsRequired()
                        .HasConstraintName("FK__Transacci__Pedid__08B54D69");

                    b.HasOne("Ecommerce.BD.Models.Usuario", "Usuario")
                        .WithMany("Transacciones")
                        .HasForeignKey("UsuarioId")
                        .IsRequired()
                        .HasConstraintName("FK__Transacci__Usuar__07C12930");

                    b.Navigation("Pedido");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("Ecommerce.BD.Models.Usuario", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", "IdentityUser")
                        .WithMany()
                        .HasForeignKey("IdentityUserId");

                    b.Navigation("IdentityUser");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Ecommerce.BD.Models.Carrito", b =>
                {
                    b.Navigation("CarritoItems");
                });

            modelBuilder.Entity("Ecommerce.BD.Models.Categoria", b =>
                {
                    b.Navigation("Productos");

                    b.Navigation("Subcategorias");
                });

            modelBuilder.Entity("Ecommerce.BD.Models.Coleccione", b =>
                {
                    b.Navigation("Productos");
                });

            modelBuilder.Entity("Ecommerce.BD.Models.Color", b =>
                {
                    b.Navigation("ProductoColores");
                });

            modelBuilder.Entity("Ecommerce.BD.Models.Descuento", b =>
                {
                    b.Navigation("ProductoDescuentos");
                });

            modelBuilder.Entity("Ecommerce.BD.Models.Direccione", b =>
                {
                    b.Navigation("Pedidos");
                });

            modelBuilder.Entity("Ecommerce.BD.Models.Genero", b =>
                {
                    b.Navigation("Productos");
                });

            modelBuilder.Entity("Ecommerce.BD.Models.ListaDeseo", b =>
                {
                    b.Navigation("ListaDeseoItems");
                });

            modelBuilder.Entity("Ecommerce.BD.Models.Marca", b =>
                {
                    b.Navigation("Productos");
                });

            modelBuilder.Entity("Ecommerce.BD.Models.Pedido", b =>
                {
                    b.Navigation("Devoluciones");

                    b.Navigation("PedidoItems");

                    b.Navigation("Transacciones");
                });

            modelBuilder.Entity("Ecommerce.BD.Models.Producto", b =>
                {
                    b.Navigation("CarritoItems");

                    b.Navigation("Devoluciones");

                    b.Navigation("Favoritos");

                    b.Navigation("ListaDeseoItems");

                    b.Navigation("PedidoItems");

                    b.Navigation("ProductoColores");

                    b.Navigation("ProductoDescuentos");

                    b.Navigation("ProductoImagenes");

                    b.Navigation("ProductoTallas");

                    b.Navigation("PromocionProductos");

                    b.Navigation("Reseñas");
                });

            modelBuilder.Entity("Ecommerce.BD.Models.Promocione", b =>
                {
                    b.Navigation("PromocionProductos");
                });

            modelBuilder.Entity("Ecommerce.BD.Models.Subcategoria", b =>
                {
                    b.Navigation("Productos");
                });

            modelBuilder.Entity("Ecommerce.BD.Models.Talla", b =>
                {
                    b.Navigation("ProductoTallas");
                });

            modelBuilder.Entity("Ecommerce.BD.Models.Usuario", b =>
                {
                    b.Navigation("Carritos");

                    b.Navigation("Direcciones");

                    b.Navigation("Favoritos");

                    b.Navigation("ListaDeseos");

                    b.Navigation("Logs");

                    b.Navigation("Notificaciones");

                    b.Navigation("Pedidos");

                    b.Navigation("Reseñas");

                    b.Navigation("Transacciones");
                });
#pragma warning restore 612, 618
        }
    }
}
